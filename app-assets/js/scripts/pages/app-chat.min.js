"use strict";
var sidebarToggle = $(".sidebar-toggle"),
    overlay = $(".body-content-overlay"),
    sidebarContent = $(".sidebar-content"),
    fetchCylceInterval,
    imageData = null;

function sidebarToggleFunction() { sidebarToggle.length && sidebarToggle.on("click", (function() { sidebarContent.addClass("show"), overlay.addClass("show") })) }

function enterChat(s) {
    var e = $(".message").val(),
        attachedImage = drawEditedImage(),
        a = document.createElement("div");
    a.classList.add("chat-content");

    if (attachedImage) {
        a.appendChild(attachedImage);
        const userFile = $('#image-attachment')[0].files[0];
        encryptImage(userFile);

        $('.image-preview-area').slideUp(); // hide preview image

    }
    if (/\S/.test(e)) {
        const p = document.createElement("p");
        p.textContent = e;
        a.appendChild(p);
    }

    if (/\S/.test(e) || attachedImage) {
        $(".chat:last-child .chat-body").append(a), $(".message").val(""), $(".user-chats").scrollTop($(".user-chats > .chats").height());

    }

    if (fetchCylceInterval)
        clearInterval(fetchCylceInterval);

    // YOUR SEND MESSAGE AJAX HERE 
}
$((function() {
        var s = $(".chat-application .chat-user-list-wrapper"),
            e = $(".chat-application .chat-profile-sidebar"),
            a = $(".chat-application .profile-sidebar-area"),
            o = $(".chat-application .sidebar-profile-toggle"),
            t = $(".chat-application .user-profile-toggle"),
            n = $(".user-profile-sidebar"),
            l = $(".chat-application .user-status input:radio[name=userStatus]"),
            i = $(".user-chats"),
            r = $(".chat-users-list"),
            c = $(".chat-list"),
            h = $(".contact-list"),
            d = $(".chat-application .close-icon"),
            f = $(".chat-application .sidebar-close-icon"),
            v = $(".chat-application .menu-toggle"),
            u = $(".speech-to-text"),
            w = $(".chat-application #chat-search");

        if ($.app.menu.is_touch_device()) s.css("overflow", "scroll"), n.find(".user-profile-sidebar-area").css("overflow", "scroll"), i.css("overflow", "scroll"), a.css("overflow", "scroll"), $(r).find("li").on("click", (function() { $(sidebarContent).removeClass("show"), $(overlay).removeClass("show") }));
        else { if (s.length > 0) new PerfectScrollbar(s[0]); if (n.find(".user-profile-sidebar-area").length > 0) new PerfectScrollbar(n.find(".user-profile-sidebar-area")[0]); if (i.length > 0) new PerfectScrollbar(i[0], { wheelPropagation: !1 }); if (a.length > 0) new PerfectScrollbar(a[0]) }
        if (o.length && o.on("click", (function() { e.addClass("show"), overlay.addClass("show") })), l.length && l.on("change", (function() {
                var s = "avatar-status-" + this.value,
                    e = $(".header-profile-sidebar .avatar span");
                e.removeClass(), o.find(".avatar span").removeClass(), e.addClass(s + " avatar-status-lg"), o.find(".avatar span").addClass(s)
            })), d.length && d.on("click", (function() { e.removeClass("show"), n.removeClass("show"), sidebarContent.hasClass("show") || overlay.removeClass("show") })), f.length && f.on("click", (function() { sidebarContent.removeClass("show"), overlay.removeClass("show") })), overlay.length && overlay.on("click", (function() { sidebarContent.removeClass("show"), overlay.removeClass("show"), e.removeClass("show"), n.removeClass("show") })), s.find("ul li").length && s.find("ul li").on("click", (function() {
                var e = $(this),
                    a = $(".start-chat-area"),
                    o = $(".active-chat"),
                    userID = $(this).data('user');
                initFetchCycle(userID);

                s.find("ul li").hasClass("active") && s.find("ul li").removeClass("active"), e.addClass("active"), e.find(".badge").remove(), s.find("ul li").hasClass("active") ? (a.addClass("d-none"), o.removeClass("d-none")) : (a.removeClass("d-none"), o.addClass("d-none"))
            })), r.find("li").on("click", (function() { i.animate({ scrollTop: i[0].scrollHeight }, 400) })), v.length && v.on("click", (function(s) { sidebarContent.removeClass("show"), overlay.removeClass("show"), e.removeClass("show"), n.removeClass("show") })), $(window).width() < 992 && sidebarToggleFunction(), w.length && w.on("keyup", (function() {
                var e = $(this).val().toLowerCase();
                if ("" !== e) {
                    c.find("li:not(.no-results)").filter((function() { $(this).toggle($(this).text().toLowerCase().indexOf(e) > -1) })), h.find("li:not(.no-results)").filter((function() { $(this).toggle($(this).text().toLowerCase().indexOf(e) > -1) }));
                    var a = c.find("li:not(.no-results):visible").length,
                        o = h.find("li:not(.no-results):visible").length;
                    0 == a ? c.find(".no-results").addClass("show") : c.find(".no-results").hasClass("show") && c.find(".no-results").removeClass("show"), 0 == o ? h.find(".no-results").addClass("show") : h.find(".no-results").hasClass("show") && h.find(".no-results").removeClass("show")
                } else r.find("li").show(), s.find(".no-results").hasClass("show") && s.find(".no-results").removeClass("show")
            })), u.length) {
            var p = p || webkitSpeechRecognition;
            if (null != p) {
                var C = new p,
                    g = !1;
                u.on("click", (function() {
                    var s = $(this);
                    s.addClass('recording');
                    C.onspeechstart = function() {
                        g = !0
                    }, !1 === g ? C.start() : null, C.onerror = function(s) { g = !1 }, C.onresult = function(e) { s.closest(".form-send-message").find(".message").val(e.results[0][0].transcript) }, C.onspeechend = function(v) {
                        g = !1, C.stop();
                        s.removeClass('recording');
                    }
                }))
            }
        }

        $('#image-attachment').change(function(e) {
            previewImage(e);
        });
    })),
    $(window).on("resize", (function() { sidebarToggleFunction(), $(window).width() > 992 && $(".chat-application .body-content-overlay").hasClass("show") && ($(".app-content .sidebar-left").removeClass("show"), $(".chat-application .body-content-overlay").removeClass("show")), $(window).width() < 991 && ($(".chat-application .chat-profile-sidebar").hasClass("show") && $(".chat-application .sidebar-content").hasClass("show") || ($(".sidebar-content").removeClass("show"), $(".body-content-overlay").removeClass("show"))) }));




function initFetchCycle(userID) {
    if (fetchCylceInterval)
        clearInterval(fetchCylceInterval);
    fetchChatConversation(userID);

    // fetchCylceInterval = setInterval(() => {
    //     fetchChatConversation(userID);
    // }, 2500);
}

function fetchChatConversation(userID) {
    $('.chats').html('');

    // Delete from here

    const dummyChats = [{
        sent_by: 1,
        image: './app-assets/images/portrait/small/avatar-s-11.jpg',
        profile_image: './app-assets/images/portrait/small/avatar-s-11.jpg',
        message: `How can we help? We're here for you! 😄`
    }, {
        sent_by: 43,
        profile_image: './app-assets/images/portrait/small/avatar-s-11.jpg',
        message: `I will purchase it for sure. 👍`
    }, {
        sent_by: 43,
        image: './app-assets/images/portrait/small/avatar-s-11.jpg',
        profile_image: './app-assets/images/portrait/small/avatar-s-11.jpg',
        message: `Looks clean and fresh UI. 😃`
    }, {
        sent_by: 1,
        profile_image: './app-assets/images/portrait/small/avatar-s-11.jpg',
        message: `It's perfect for my next project.`
    }];

    dummyChats.forEach(message => {
        $(".chats").append(chatTemplate(message, userID)), $(".user-chats").scrollTop($(".user-chats > .chats").height())
    });
    return;
    // To this place

    $.ajax({
        url: 'YOUR URL HERE',
        type: 'GET',
        dataType: 'json',
        data: {
            receipient_id: userID
        },
        success: (response) => {
            $('.chats').html('');
            if (response.status == 'ok') {
                response.messages.forEach(message => {
                    $(".chats").append(chatTemplate(message, userID)), $(".user-chats").scrollTop($(".user-chats > .chats").height())
                });
            } else {
                handleServerError(response);
            }
        },
        error: (error) => {
            handleServerError(error);
        }

    })
}

function chatTemplate(chat, receipientId) {
    const template = `<div class="chat ${chat.sent_by == receipientId ? 'chat-left': null} ">
                        <div class="chat-avatar">
                            <span class="avatar box-shadow-1 cursor-pointer">
                                <img src="${chat.profile_image}" alt="avatar" height="36" width="36" />
                            </span>
                        </div>
                        <div class="chat-body">
                            <div class="chat-content">
                            ${chat.image ? "<img src="+chat.image+" alt='' />" : ''}
                                <p>${chat.message}</p>

                                ${chat.image ? "<a target='_blank'   href='open-image?id="+chat.id+"' class='btn btn-block btn-warning mt-2' alt=''>Open Image </a>" : ''}
                            </div>
                        </div>
                    </div>`;

    return template;
}

function handleServerError(error) {
    alert("Opps! The server has encountered a temporary issue. Please refresh the page.")
    console.error(error);
}

function previewImage(event) {
    if (event.target.files.length > 0) {
        var reader = new FileReader();
        reader.onload = function() {
            var output = $('.image-preview-area img');

            output.attr('src', reader.result);
            chaoticEncryption(reader.result);
            $('.image-preview-area').slideDown();
        }

        reader.readAsDataURL(event.target.files[0]);
    } else {
        $('.image-preview-area').slideUp();
    }
}

function getAttachedImageSrc() {

    const [file] = $('#image-attachment')[0].files
    if (file) {
        return URL.createObjectURL(file)
    }

}


function getRandomNumber(e = 0, t = 100) {
    return Math.random() * (t - e) + e;
}

function drawEditedImage(newData = imageData) {
    if (newData !== null) {
        var canvasEdited = document.createElement('canvas');

        var ctxEdited = canvasEdited.getContext('2d');
        ctxEdited.putImageData(newData, 0, 0);
        imageData = null;
        return canvasEdited;
    }
}

function reDrawEditedImage(newData) {
    var ctxEdited = reCanvas.getContext('2d');
    ctxEdited.putImageData(newData, 0, 0);
}

function shuffle(inArr, seed, unshuffle = false) {
    let outArr = inArr,
        len = inArr.length

    let swap = (a, b) => [outArr[a], outArr[b]] = [outArr[b], outArr[a]]

    for (
        var i = unshuffle ? len - 1 : 0; unshuffle && i >= 0 || !unshuffle && i < len; i += unshuffle ? -1 : 1
    )

        swap(seed[i % seed.length] % len, i)
    return new Uint8ClampedArray(outArr);

}

function unshuffle(inArr, seed) {
    shuffle(inArr, seed, true)
}

function chaoticEncryption(src) {

    const img = new Image(),
        canvas = document.getElementById('canvas'),
        ctx = canvas.getContext('2d');
    let seed = [];


    img.src = src;
    img.onload = () => {

        var ct = document.getElementById('measure');
        ct.appendChild(img);
        var wrh = img.width / img.height;
        var newWidth = canvas.width;
        var newHeight = newWidth / wrh;
        if (newHeight > canvas.height) {
            newHeight = canvas.height;
            newWidth = newHeight * wrh;
        }
        ct.removeChild(img);

        ctx.clearRect(0, 0, canvas.width, canvas.height);
        ctx.drawImage(img, 0, 0, newWidth, newHeight);

        imageData = ctx.getImageData(0, 0, newWidth, newHeight);
        const g = imageData.data;

        for (var i = 0; i < imageData.data.length / 10; i++) seed.push(Math.ceil(Math.random() * 10));

        shuffle(imageData.data, seed);
    }
}

function encryptImage(file) {
    var form = new FormData();
    form.append("file", file);
    form.append("key", "12345678");
    form.append("salt", "12345678");
    form.append("algo", "des");

    var settings = {
        "url": "http://127.0.0.1:3000/api/encrypt",
        "method": "POST",
        "dataType": "JSON",
        "timeout": 0,
        "processData": false,
        "mimeType": "multipart/form-data",
        "contentType": false,
        "data": form,
        success: function(request) {
            console.log(request);
            $('#test').attr('src', request.file.name);
        },
        error: function(error) {
            console.log(error);
        }
    };

    $.ajax(settings);
    // .done(function(response) {
    //     $('#test').attr('src', response);
    //     console.log(response);
    // });
}